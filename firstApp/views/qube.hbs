<!DOCTYPE html>
<html lang="en">

  <head>

    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <meta name="description" content="">
    <meta name="author" content="">
    <!-- Bootstrap core CSS -->
    <link href="css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://www.w3schools.com/w3css/4/w3.css">
    <link href="/stylesheets/qube.css" rel="stylesheet">
    <link href="css/business-frontpage.css" rel="stylesheet">

  </head>

  <body>
    <!-- Header with Background Image -->
    <header class="backgroundOne">
      <div class="container">
        <div class="row">
          <div class="col-lg-12">
            <div class="alphabeticalOrder" style="text-align: center; font-size: large">
            <h1 class="display-3 text-center text-white mt-4" style="color: black">Q.U.B.E</h1>
            </div>
          </div>
        </div>
      </div>
    </header>

    <!-- Page Content -->
    <div class="container">

      <div class="row">
        <div class="col-sm-8">
          <h2 class="mt-4 heading">Overview:</h2>
          <p>
            Q.U.B.E. (Quick Understanding of Block Extrusion) is a physics-based puzzle video game
             developed and published by Toxic Games, with help from Indie Fund, a group of successful
             independent game developers. The game, an expansion of a student project by the founding
             members of Toxic Games, was released for Microsoft Windows through a number of digital distribution platforms,
             first through Desura on 17 December 2011 and then through Steam on 6 January 2012.
             An OS X port was later released on 17 December 2012 through Steam and on 18 December
             2012 through Desura.
           </p>
           <p>

             In the game, the player guides their avatar through a series of levels to make their
             way to an exit. The player-character is equipped with special gloves that can perform
             a number of functions on specific blocks to reach the exit. The game employs a sterile
             monochromatic environment that highlights the coloured blocks that the player can interact
              with, and has been compared to the Portal series.
          </p>
        </div>
        <div class="col-sm-4">
          <div class="details">
          <address>
            <strong>Developed By:</strong>
            <br>Toxic Games
            <br>
          </address>
          <address>
            <strong>Release Date:</strong>
            <br> December 2013
          </address>
        </div>
        </div>
      </div>

      <!-- /.row -->
</div>
<div class="backgroundTwo"></div>
      <div class="container">
       <div class="row">
      <h2 class="mt-4 heading">Gameplay:</h2>
   <div class="w3-content w3-display-container col-lg-6" style="max-width:550px; padding-bottom: 20px">
     <img class="mySlides" src="https://i.ytimg.com/vi/EWHaf0qVnks/maxresdefault.jpg" style="width:100%">
     <img class="mySlides" src="https://static.giantbomb.com/uploads/original/9/99503/2100071-qubess_1.jpg" style="width:100%">
     <img class="mySlides" src="https://i.ytimg.com/vi/A1zveW6nLGQ/maxresdefault.jpg" style="width:100%">
     <div class="w3-center w3-section w3-large w3-text-white w3-display-bottomleft" style="width:100%; padding-bottom: 10px;">
       <span class="w3-badge demo w3-border w3-transparent w3-hover-white" onclick="currentDiv(1)"></span>
       <span class="w3-badge demo w3-border w3-transparent w3-hover-white" onclick="currentDiv(2)"></span>
       <span class="w3-badge demo w3-border w3-transparent w3-hover-white" onclick="currentDiv(3)"></span>
     </div>
     </div>
     <!-- 1. The <iframe> (and video player) will replace this <div> tag. -->
     <div id="player" class="col-lg-6" style="width: 100%; max-width:520px"></div>
   </div>

      <div class="row">
      <p>
        The player's character, after waking up from some incident, finds himself with a pair
        of gloves that can interact with specific blocks that are in the walls, floors, and
         ceilings of the various rooms as he progresses. The function of the blocks are
          distinguished by colour: red blocks can be extended or retracted; yellow blocks,
          always in groups of three, can be used to make stair-like structures; blue blocks
          can be retracted to act like a springboard to whatever touches them; purple blocks
           provide means to rotate sections of walls of a room; and green blocks provide
           a sphere or cube, which the player will need to manipulate. In the early stages,
           the player's goal is to use a combination of these blocks to get themselves to an
            exit point, allowing them to move to the next chamber.
          </p>
          <p>
            As the player progresses deeper into the unknown complex, new puzzle aspects are
            introduced. In one stage, the bulk of the chambers are dark except for specific
            coloured blocks, requiring the player to remember the location of other blocks as
            they manipulate them.Another section features light-oriented puzzles, with the
            player using cubes and other features to orient the light beam in the correct fashion.
      </p>
    </div>
</div>

<div class="container">
  <div class="row">
    <h2 class="mt-4 heading">Reviews:</h2>
        <div class="col-lg-4 col-sm-4 col-xs-12">
            <div class="panel panel-success" style="border-width: 0px">
                <div class="panel-heading" style="text-align: center; font-size: large; background-color: #EA1E1E; color: white">IGN</div>
                <div class="panel-body" style="color: black">
                    <p>
Portal it ain't. </p>

                    <a href="http://ie.ign.com/articles/2012/01/11/qube-review" target="_blank" style="color: blue">
                      Read More
                    </a>
                </div>
                <div class="panel-footer">
                     <h3 style="color: gold">
                       &#9733 &#9733 &#9734 &#9734 &#9734;
                     </h3>
                </div>
        </div>
      </div>

        <div class="col-lg-4 col-sm-4 col-xs-12">
            <div class="panel panel-success" style="border-width: 0px">
                <div class="panel-heading" style="text-align: center; font-size: large; background-color: #1c1a1a; color: white">Gamespot</div>
                <div class="panel-body" style="color: black">
                    <p>
Q.U.B.E. is a game about problem solving and navigation
                    <a href="https://www.gamespot.com/reviews/qube-review/1900-6348007/" target="_blank" style="color: blue">
                      Read More
                    </a>
                </div>
                <div class="panel-footer">
                     <h3 style="color: gold">
                       &#9733 &#9733 &#9733 &#9734 &#9734;
                     </h3>
                </div>
            </div>
        </div>

        <div id="reviewThree">
        <div class="col-lg-4 col-sm-4 col-xs-12">
            <div class="panel panel-success" style="border-width: 0px">
                <div class="panel-heading"style="text-align: center; font-size: large; background-color: #59EA1E; color: white">Destructoid</div>
                <div class="panel-body">
                    <p>
It's airy, far too subtle, and poses far more questions that it cares to answer.
                    <a href="https://www.destructoid.com/review-q-u-b-e--219684.phtml" target="_blank" style="color: blue">
                      Read More
                    </a>
                </div>
                <div class="panel-footer">
                     <h3 style="color: gold">
                       &#9733 &#9733 &#9733 &#9733 &#9734;
                     </h3>
                </div>
            </div>
        </div>
      </div>
  </div>
</div>

<div class="backgroundThree"></div>

<div class="container">
 <div class="row">
<h2 class="mt-4 heading">Comments:</h2>

<div class="commentsBox well col-xs-6 col-xs-offset-3">
    <div class="row col-xs-10 col-xs-offset-1">
        <form class="form-horizontal" role="form" id="postForm">
            <div class="row">
                <div class="form-group">
                    <div class="col-xs-12">
                    <textarea class="textArea form-control required" rows="3" id="inputPost"
                              placeholder="Add a comment..." maxlength="140"></textarea>
                        <label id="charRemaining" for="inputPost">140</label>
                    </div>
                </div>
            </div>
            <div class="form-group">



                <div class="col-xs-3">
                    <button type="text" class="postButton btn btn-primary">Post</button>
                </div>
            </div>
        </form>
    </div>
</div>

<div class="row col-sm-10 col-sm-offset-1">
    <button type="button" class="btn btn-primary" id="btn-count">
        Comments <span class="badge badge-light" id="count">0</span>
    </button>
</div>
<div class="row col-sm-8 col-sm-offset-2" id="feedPosts">
</div>
</div>
</div>
<br>
    <!-- Bootstrap core JavaScript -->
    <script src="vendor/jquery/jquery.min.js"></script>
    <script src="vendor/bootstrap/js/bootstrap.bundle.min.js"></script>
    <script>
    // 2. This code loads the IFrame Player API code asynchronously.
      var tag = document.createElement('script');

      tag.src = "https://www.youtube.com/iframe_api";
      var firstScriptTag = document.getElementsByTagName('script')[0];
      firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);

      // 3. This function creates an <iframe> (and YouTube player)
      //    after the API code downloads.
      var player;
      function onYouTubeIframeAPIReady() {
        player = new YT.Player('player', {
          height: '293',
          width: '520',
          videoId: 'iABxhj0ExA0',
          events: {
            'onReady': null,
            'onStateChange': onPlayerStateChange
          }
        });
      }

      // 4. The API will call this function when the video player is ready.
      function onPlayerReady(event) {
        event.target.playVideo();
      }

      // 5. The API calls this function when the player's state changes.
      //    The function indicates that when playing a video (state=1),
      //    the player should play for six seconds and then stop.
      var done = false;
      function onPlayerStateChange(event) {
        if (event.data == YT.PlayerState.PLAYING && !done) {
          done = true;
        }
      }
      function stopVideo() {
        player.stopVideo();
      }
    var slideIndex = 1;
    showDivs(slideIndex);

    function plusDivs(n) {
      showDivs(slideIndex += n);
    }

    function currentDiv(n) {
      showDivs(slideIndex = n);
    }

    function showDivs(n) {
      var i;
      var x = document.getElementsByClassName("mySlides");
      var dots = document.getElementsByClassName("demo");
      if (n > x.length) {slideIndex = 1}
      if (n < 1) {slideIndex = x.length} ;
      for (i = 0; i < x.length; i++) {
         x[i].style.display = "none";
      }
      for (i = 0; i < dots.length; i++) {
         dots[i].className = dots[i].className.replace(" w3-white", "");
      }
      x[slideIndex-1].style.display = "block";
      dots[slideIndex-1].className += " w3-white";
    }
    </script>
    <script src="https://code.jquery.com/jquery-1.10.2.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/js-cookie@2/src/js.cookie.min.js"></script>
    <script src="/javascripts/bootstrap.min.js"></script>
    <script src="/javascripts/auth.js"></script>
    <script src="/javascripts/qube.js">
    // <!--script src="/javascripts/hello.js"></script-->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/hellojs/2.0.0-1/hello.all.js"></script>
    <script src="https://code.jquery.com/ui/1.12.1/jquery-ui.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/limonte-sweetalert2/6.11.4/sweetalert2.all.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/js-cookie@2/src/js.cookie.min.js"></script>
  </body>

</html>
